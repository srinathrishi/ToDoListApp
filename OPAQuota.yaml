apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: k8srequiredresources
spec:
  crd:
    spec:
      names:
        kind: K8sRequiredResources
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8srequiredresources

        violation[{"msg": msg, "details": {"missing_resource": missing}}] {
          container := input.review.object.spec.template.spec.containers[_]
          missing := {r | r := input.parameters.resources[_] ; not container.resources.requests[r]}
          count(missing) > 0
          msg := sprintf("Containers must define requests for the following resources: %v", [missing])
        }

  parameters:
    - name: resources
      description: List of resources that must be requested
      type: array
      default: ["cpu", "memory"]


apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sRequiredResources
metadata:
  name: my-k8srequiredresources-constraint
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Deployment", "StatefulSet", "Pod"]
  parameters:
    resources:
      - cpu
      - memory

apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sRequiredResources
metadata:
  name: my-k8srequiredresources-constraint
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Deployment", "StatefulSet", "Pod"]
  parameters:
    resources:
      - cpu
      - memory

